packages = c("gapminder","tidyverse")
package.check <- lapply(packages, FUN = function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
})
gapminder
class(gapminder)
dplyr
packages = c("gapminder","dplyr")
package.check <- lapply(packages, FUN = function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
})
dplyr
dplyr
gapminder
gapminder %>%
select(-cotinent)
gapminder %>%
select(-continent)
gapminder %>%
filter( year == 2007)
gapminder %>%
filter( year == 2014)
gapminder %>%
filter( year == 2008)
gapminder
package.check <- lapply(packages, FUN = function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
})
packages = c("gapminder","dplyr","ggplot2")
package.check <- lapply(packages, FUN = function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
})
ggplot(gapminder, aes(x=gdpPercap,y=lifeExp,color=continent,size=pop)) +
geom_point() +
scale_x_log10()+
facet_wrap(~year)
gapminder
gapminder %>%
group_by(continent,year) %>%
summarize ( medianLifeExp= median(lifeExp), maxGdpPercap= max(gdpPercap))
ggplot(by_year, aes(x=year,y=medianLifeExp)) +
geom_point()
by_year <- gapminder %>%
group_by(year) %>%
summarize(medianLifeExp = median(lifeExp),
maxGdpPercap = max(gdpPercap))
ggplot(by_year, aes(x=year,y=medianLifeExp)) +
geom_point()
ggplot(by_year, aes(x=year,y=medianLifeExp)) +
geom_point() +
expand_limits(y=0)
by_year_continent <- gapminder %>%
group_by (continent,year) %>%
summarize(medianGdpPercap = median(grpPercap))
by_year_continent <- gapminder %>%
group_by (continent,year) %>%
summarize(medianGdpPercap = median(gdpPercap))
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap) +
geom_point() +
expand_limits()
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap) +
geom_point() +
expand_limits()
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap) +
geom_point() +
expand_limits()
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap)) +
geom_point() +
expand_limits()
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap)) +
geom_point() +
expand_limits(y=0)
by_year_continent
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap)) +
geom_point() +
expand_limits(y=0)
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap,color=continent))+
geom_point() +
expand_limits(y=0)
ggplot(by_continent_2007, aes(x=medianGdpPercap,y=medianLifeExp,color=continent)) +
geom_point()
by_continent_2007 <- gapminder %>%
filter(year == 2007) %>%
group_by (continent) %>%
summarize(medianLifeExp= median(lifeExp),medianGdpPercap = median(gdpPercap))
ggplot(by_continent_2007, aes(x=medianGdpPercap,y=medianLifeExp,color=continent)) +
geom_point()
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap,color=continent))+
geom_point() +
expand_limits(y=0)
by_year_continent <- gapminder %>%
group_by (continent,year) %>%
summarize(medianGdpPercap = median(gdpPercap))
ggplot(by_year_continent, aes(x=year,y=medianGdpPercap,color=continent)) +
geom_line() +
expand_limits(y=0)
by_continent <- gapminder %>%
filter(year==1952) %>%
group_by (continent) %>%
summarize(medianGdpPercap = median(gdpPercap))
ggplot(by_continent,aes(x=continent,y=medianGdpPercap))+
geom_bar()
by_continent
ggplot(by_continent,aes(x=continent,y=medianGdpPercap))+
geom_bar(stat="identity")
ggplot(by_continent,aes(x=continent,y=medianGdpPercap))+
geom_col()
oceania_1952 <- gapminder %>%
filter(year==1952,continent=="oceania")
View(oceania_1952)
gapminder
oceania_1952 <- gapminder %>%
filter(year==1952,continent=="Oceania")
View(oceania_1952)
gapminder
x <- c(1:5)
x
x[0]
x[1]
x <- list(c(1:5),c(11:15))
x[1]
x[1][1]
x[1][1]
x[1]
x[1][2]
x[1][1]
x[1]
y<-x[1]
y
y[1]
class(y)
y[1]
y[1][1]
x <- c((c(1:5),c(11:15)))
x <- c(c(1:5),c(11:15))
x
x <- list(c(1:5),c(11:15))
x
x[2]
x[2][1][1]
x[2]x
x[2]
x <- list(c(1:5))
x
x[2]
iris
gapminder_1952 <- gapminder %>%
filter(year == 1952)
ggplot(gapminder_1952, aes(x=pop)) +
geom_histogram()
# Finish the code below to recreate bands3 with a right join
bands2 <- left_join(bands, artists, by = c("first", "last"))
bands
iris %>%
group_by(Species) %>%
summarise( count = n())
packages = c("gapminder","dplyr","ggplot2")
package.check <- lapply(packages, FUN = function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
})
iris %>%
group_by(Species) %>%
summarise( count = n())
df <- data.frame(
x1 = c(4, 5, 1),
x2 = c(6, 8, 9)
)
df
as.tibble(df)
tibble(df)
tibble(df)
as.tibble(df)
df
?if
?if()
??if()
??if
x <- "C"
(x == "C") {
y <- 2
} else {
y <- 3
}
if(x == "A") {
y <- 1
}
if(x == "A") {
y <- 1
}
elseif
(x == "C") {
y <- 2
} else {
y <- 3
}
else (x == "C") {
y <- 2
} else {
y <- 3
}
if (x == "C") {
y <- 2
} else {
y <- 3
}
y
if (x == "C") {
y <- 2
} else {
y <- 3
}
else if (x == "C") {
y <- 2
} else {
y <- 3
}
print("Zero")
x <- 0
if (x < 0) {
print("Negative number")
} else if (x > 0) {
print("Positive number")
} else
print("Zero")
x <- 1
if (x < 0) {
print("Negative number")
} else if (x > 0) {
print("Positive number")
} else
print("Zero")
x <- "C"
if(x == "A") {
y <- 1
} else if (x == "C") {
y <- 2
} else {
y <- 3
}
x <- "C"
if(x == "A") {
y <- 1
} else if (x == "C") {
y <- 2
} else {
y <- 3
}
y
"four" < "two"
"four" < "two"
x <- "four"
str(x)
"four" < "two"
?<
x <- "four"
?<
x <- "four"
??<
x <- "four"
dates <- c("10-20-1990", "10-20-2014", "2012", "10.2010", "10-1995")
grep(pattern = "^[0-9]+.[0-9]+$", x = dates)
library("rebus")
pattern = START %R% one_or_more([0-9]) %R% ANY_CHAR %R% one_or_more([0-9]) %R% END
pattern = START %R% one_or_more(DGT) %R% ANY_CHAR %R% one_or_more(DGT) %R% END
grep( pattern, x= dates)
pattern = START %R% one_or_more(DGT) %R% ANY_CHAR %R% one_or_more(DGT) %R% END
grep( pattern, x= dates)
pattern = START %R% one_or_more(DGT) %R% ANY_CHAR %R% one_or_more(DGT) %R% END
grep( pattern, x= dates)
grep( pattern = pattern, x= dates)
str_view(dates, pattern)
library("tidyverse")
str_view(dates, pattern)
maximum <- function(x, ...) {
max(x, ...)
}
y <- c(14, NA, 15, 18)
maximum(y, na.rm = TRUE)
