require(ggplot2)
which(require(ggplot2))
print(require(ggplot2))
(
print(require(ggplot2))
print(require(ggplot2))
ggplot
print(require(ggplot2))
?install.packages
?require
packages = c("tidyverse","ggplot2")
for pkg in packages {
}
?for
?for
?for
?for()
?for
?forx
?print()
? for
for [pkg in packages] {
if (!require(pkg, character.only = T))  {
install.packages(pkg, dependencies = T)
library(pkg, character.only = T)
}
}
for (pkg in packages) {
if (!require(pkg, character.only = T))  {
install.packages(pkg, dependencies = T)
library(pkg, character.only = T)
}
}
package_check <- for (pkg in packages) {
if (!require(pkg, character.only = T))  {
install.packages(pkg, dependencies = T)
library(pkg, character.only = T)
}
}
package_check
# laoding required packages
packages = c("tidyverse","ggplot2")
package.check <- lapply(packages, FUN = function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
})
package.check <- for (pkg in packages) {
if (!require(pkg, character.only = T))  {
install.packages(pkg, dependencies = T)
library(pkg, character.only = T)
}
}
packages = c("tidyverse","ggplot2")
package.check <- for (pkg in packages) {
if (!require(pkg, character.only = T))  {
install.packages(pkg, dependencies = T)
library(pkg, character.only = T)
}
}
package.check
?slice
slice(mtcars, 1L)
mtcars
?1L
??1L
slice(mtcars, n())
slice(mtcars, 1)
slice(mtcars, 2L)
slice(mtcars, :2)
slice(mtcars, 2)
slice(mtcars, 1:2)
slice(mtcars, 20:)
slice(mtcars, 1:20)
mtcars
iris
?geom_col
?reorder
reorder(mtcars)
reorder(mtcars$cyl)
?mutate
?lead
lead(1:10, 1)
lead(1:10, 2)
mutate(lead(1:10, 2))
# Use order_by if data not already ordered
df <- data.frame(year = 2000:2005, value = (0:5) ^ 2)
scrambled <- df[sample(nrow(df)), ]
wrong <- mutate(scrambled, prev = lag(value))
arrange(wrong, year)
scrambled
mutate(scrambled, prev = lag(value))
mutate(scrambled, prev = lead(value))
?filter
iris
x <-iris$Species
x <- as.character(iris$Species)
class(x)
x
